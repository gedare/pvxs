# .github/workflows/ci-scripts-build.yml for use with EPICS Base ci-scripts
# (see: https://github.com/epics-base/ci-scripts)

# This is YAML - indentation levels are crucial

# Set the 'name:' properties to values that work for you (pvxs)

name: pvxs ci-scripts build

# Trigger on pushes and PRs to any branch
on: [push, pull_request]

env:
  SETUP_PATH: .ci-local
  CMP: gcc
  BASE: "7.0"

jobs:
  build-linux:
    name: ${{ matrix.cmp }} / ${{ matrix.configuration }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    # Set environment variables from matrix parameters
    env:
      CMP: ${{ matrix.cmp }}
      BCFG: ${{ matrix.configuration }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]
        cmp: [gcc, clang]
        configuration: [default, static, debug, static-debug]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Prepare and compile dependencies
      run: python .ci/cue.py prepare
    - name: Build libevent
      run: python .ci/cue.py exec python .ci-local/libevent.py
    - name: Build main module
      run: python .ci/cue.py build
    - name: Run main module tests
      run: python .ci/cue.py --add-path "{TOP}\bundle\usr\{EPICS_HOST_ARCH}\lib" test
    - name: Capture tap files
      uses: actions/upload-artifact@v2
      with:
        name: tapfiles
        path: test/**/*.tap
    - name: Collect and show test results
      run: python .ci/cue.py test-results
    - name: CDT Check
      run: ./.ci-local/cdt-check.sh

  build-macos:
    name: ${{ matrix.cmp }} / ${{ matrix.configuration }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    # Set environment variables from matrix parameters
    env:
      CMP: ${{ matrix.cmp }}
      BCFG: ${{ matrix.configuration }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15]
        cmp: [clang]
        # No static builds on MacOS
        configuration: [default, debug]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Prepare and compile dependencies
      run: python .ci/cue.py prepare
    - name: Build libevent
      run: python .ci/cue.py exec python .ci-local/libevent.py
    - name: Build main module
      run: python .ci/cue.py build
    - name: Run main module tests
      run: python .ci/cue.py --add-path "{TOP}\bundle\usr\{EPICS_HOST_ARCH}\lib" test
    - name: Capture tap files
      uses: actions/upload-artifact@v2
      with:
        name: tapfiles
        path: test/**/*.tap
    - name: Collect and show test results
      run: python .ci/cue.py test-results
    - name: CDT Check
      run: ./.ci-local/cdt-check.sh

  build-windows:
    name: ${{ matrix.cmp }} / ${{ matrix.configuration }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CMP: ${{ matrix.cmp }}
      BCFG: ${{ matrix.configuration }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2016]
        cmp: [gcc, vs2019, vs2017]
        configuration: [default, static, debug, static-debug]
        # Available: vs2017/windows-2016 and vs2019/windows-2019
        exclude:
          - os: windows-2019
            cmp: vs2017
          - os: windows-2016
            cmp: vs2019
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Prepare and compile dependencies
      run: python .ci/cue.py prepare
    - name: Build libevent
      run: python .ci/cue.py exec python .ci-local/libevent.py
    - name: Build main module
      run: python .ci/cue.py build
    - name: Run main module tests
      run: python .ci/cue.py --add-path "{TOP}\bundle\usr\{EPICS_HOST_ARCH}\lib" test
    - name: Capture tap files
      uses: actions/upload-artifact@v2
      with:
        name: tapfiles
        path: test/**/*.tap
    - name: Collect and show test results
      run: python .ci/cue.py test-results
    - name: CDT Check
      run: ./.ci-local/cdt-check.sh

  # The WINE cross builds are of somewhat limited use,
  # as there are native gcc/MinGW builds available on GitHub Actions
  build-wine:
    name: WINE${{ matrix.wine }} / ${{ matrix.configuration }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CMP: ${{ matrix.cmp }}
      BCFG: ${{ matrix.configuration }}
      WINE: ${{ matrix.wine }}
      APT: g++-mingw-w64-x86-64
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        cmp: [gcc]
        configuration: [default, static, debug, static-debug]
        wine: [64]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Prepare and compile dependencies
      run: python .ci/cue.py prepare
    - name: Build libevent
      run: python .ci/cue.py exec python .ci-local/libevent.py
    - name: Build main module
      run: python .ci/cue.py build
    - name: Run main module tests
      run: python .ci/cue.py --add-path "{TOP}\bundle\usr\{EPICS_HOST_ARCH}\lib" test
    - name: Capture tap files
      uses: actions/upload-artifact@v2
      with:
        name: tapfiles
        path: test/**/*.tap
    - name: Collect and show test results
      run: python .ci/cue.py test-results
    - name: CDT Check
      run: ./.ci-local/cdt-check.sh
